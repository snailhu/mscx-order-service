<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digitalchina.dao.OrderDetailMapper">
  <resultMap id="BaseResultMap" type="com.digitalchina.domain.OrderDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="resource_id" jdbcType="INTEGER" property="resourceId" />
    <result column="resource_type" jdbcType="VARCHAR" property="resourceType" />
    <result column="resource_name" jdbcType="VARCHAR" property="resourceName" />
    <result column="charge_rule_id" jdbcType="INTEGER" property="chargeRuleId" />
    <result column="charge_rule_name" jdbcType="VARCHAR" property="chargeRuleName" />
    <result column="charge_rule_des" jdbcType="VARCHAR" property="chargeRuleDes" />
    <result column="charge_rule_type" jdbcType="VARCHAR" property="chargeRuleType" />
    <result column="item_cash" jdbcType="DOUBLE" property="itemCash" />
    <result column="item_number" jdbcType="INTEGER" property="itemNumber" />
    <result column="item_cash_total" jdbcType="DOUBLE" property="itemCashTotal" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="udpated_time" jdbcType="TIMESTAMP" property="udpatedTime" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="defaul_time" jdbcType="INTEGER" property="defaulTime" />
    <result column="resource_delay_time" jdbcType="INTEGER" property="resourceDelayTime" />
    <result column="is_free" jdbcType="TINYINT" property="isFree" />
    <result column="pay_type" jdbcType="VARCHAR" property="payType" />
    <result column="order_user_id" jdbcType="VARCHAR" property="orderUserId" />
    <result column="order_user_name" jdbcType="VARCHAR" property="orderUserName" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="order_num" jdbcType="VARCHAR" property="orderNum" />
    <result column="unit_price" jdbcType="VARCHAR" property="unitPrice" />
    <result column="source_json" jdbcType="VARCHAR" property="sourceJson" />
  </resultMap>


  <resultMap id="SourceUserIdCont" type="com.digitalchina.dto.SourceIdCountDto">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_num" jdbcType="INTEGER" property="userNum" />
    <result column="apply_num" jdbcType="INTEGER" property="applyNum" />
    <result column="resource_id" jdbcType="INTEGER" property="resourceId" />
    <result column="resource_type" jdbcType="VARCHAR" property="resourceType" />
  </resultMap>


  <resultMap id="SourceStatisticsCont" type="com.digitalchina.dto.StatisticsDto">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_num" jdbcType="INTEGER" property="applyUserCount" />
    <result column="apply_num" jdbcType="INTEGER" property="applyCount" />
    <result column="resource_id" jdbcType="INTEGER" property="resourceId" />
    <result column="resource_type" jdbcType="VARCHAR" property="resourceType" />
    <result column="area" jdbcType="VARCHAR" property="area" />
  </resultMap>

  <insert id="insert" parameterType="com.digitalchina.domain.OrderDetail" useGeneratedKeys="true" keyProperty="id">
    insert into order_detail (order_id, resource_id,
      resource_type, resource_name, charge_rule_id, 
      charge_rule_name, charge_rule_des, charge_rule_type, 
      item_cash, item_number, item_cash_total, 
      area, created_time, created_by, 
      udpated_time, updated_by, defaul_time, 
      resource_delay_time,is_free,pay_type,order_user_id,order_user_name,create_user_id,order_num,unit_price,source_json)
    values (#{orderId,jdbcType=INTEGER}, #{resourceId,jdbcType=INTEGER},
      #{resourceType,jdbcType=VARCHAR}, #{resourceName,jdbcType=VARCHAR}, #{chargeRuleId,jdbcType=INTEGER}, 
      #{chargeRuleName,jdbcType=VARCHAR}, #{chargeRuleDes,jdbcType=VARCHAR}, #{chargeRuleType,jdbcType=VARCHAR},
      #{itemCash,jdbcType=DOUBLE}, #{itemNumber,jdbcType=INTEGER}, #{itemCashTotal,jdbcType=DOUBLE}, 
      #{area,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, 
      #{udpatedTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, #{defaulTime,jdbcType=INTEGER}, 
      #{resourceDelayTime,jdbcType=INTEGER},
      #{isFree,jdbcType=TINYINT},#{payType,jdbcType=VARCHAR},#{orderUserId,jdbcType=VARCHAR},#{orderUserName,jdbcType=VARCHAR},
      #{createUserId,jdbcType=VARCHAR},#{orderNum,jdbcType=VARCHAR},#{unitPrice,jdbcType=VARCHAR},#{sourceJson,jdbcType=VARCHAR}
      )
  </insert>

  <select id="countBySourcdIdOrPackId"  parameterType="java.util.HashMap" resultType="int">
     SELECT count(*) FROM order_detail where 1=1
     <if test="sourcdId != null">
       AND resource_id=#{sourceId}
     </if>
    <if test="packageId != null">
      AND charge_rule_id=#{packageId}
    </if>
    <if test="userId != null">
      AND order_user_id=#{userId}
    </if>
    <if test="area != null">
      AND area=#{area}
    </if>
    <if test="resourceType != null">
      AND resource_type=#{resourceType}
    </if>
  </select>

  <!--获取api的总数-->
  <select id="getOrderListApiCount"  parameterType="java.util.HashMap" resultType="int">
    SELECT count(*)  MAX (created_time) FROM order_detail where 1=1
    <if test="sourcdId != null">
      AND order_user_id=#{userId}
    </if>
    <if test="packageId != null">
      AND charge_rule_id=#{packageId}
    </if>
    GROUP BY  resource_id
  </select>


  <select id="countByTime"  parameterType="java.util.HashMap" resultType="int">
    SELECT count(*) FROM order_detail where 1=1
    <if test="sourcdId != null">
      AND resource_id=#{sourceId}
    </if>
    <if test="startTime!= null">
      AND created_time &gt;=#{startTime}
    </if>
    <if test="endTime!= null">
      AND created_time &lt;=#{endTime}
    </if>
  </select>

  <select id="getOrderDetailByOrderNum" parameterType="String" resultMap="BaseResultMap">
    SELECT * FROM order_detail where order_num = #{orderNum}
  </select>

  <select id="findOrderDetailByDetailId" parameterType="int" resultMap="BaseResultMap">
    SELECT * FROM order_detail where id = #{orderDetailId}
  </select>

  <!-- 获取用户订购的api last-->
  <!--<select id="getOrderDetailByConf"  parameterType="java.util.HashMap" resultMap="BaseResultMap">-->
    <!--SELECT od.id as id,resource_id ,resource_type,resource_name,charge_rule_id,charge_rule_name,charge_rule_des,-->
    <!--charge_rule_type,item_cash,item_number,item_cash_total,od.area as area, MAX(od.created_time) as created_time,oi.created_by as created_by,-->
    <!--od.udpated_time as updated_time,od.updated_by as update_by,defaul_time,resource_delay_time,is_free,oi.pay_type as pay_type,order_user_id,oi.order_user_name as order_user_name,od.create_user_id as create_user_id,-->
    <!--od.order_num as order_num,unit_price,source_json-->
    <!--FROM order_detail as od LEFT JOIN order_info as oi ON  od.order_id = oi.id where 1=1-->
    <!--<if test="userId != null">-->
      <!--AND od.order_user_id=#{userId}-->
    <!--</if>-->
    <!--<if test="resourceType != null">-->
      <!--AND od.resource_type=#{resourceType}-->
    <!--</if>-->
    <!--<if test="payStatus != null">-->
      <!--AND oi.order_status=#{payStatus}-->
    <!--</if>-->
    <!--GROUP BY  od.resource_id    ORDER BY  MAX(od.created_time) DESC limit #{startIndex},#{endIndex}-->
  <!--</select>-->



  <select id="getOrderDetailByConf"  parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT b.* from (select a.* from order_detail as a where
    a.resource_type=#{resourceType} and  not exists (select 1 from order_detail where resource_id = a.resource_id and created_time > a.created_time and order_user_id=#{userId}) ORDER BY resource_id) as b LEFT JOIN order_info as oi ON  b.order_id = oi.id
    where 1=1
    <if test="userId != null">
      AND b.order_user_id=#{userId}
    </if>
    <if test="resourceType != null">
      AND b.resource_type=#{resourceType}
    </if>
    <if test="payStatus != null">
      AND oi.order_status=#{payStatus}
    </if>
     ORDER BY b.created_time DESC limit #{startIndex},#{endIndex}
  </select>

  <!-- 获取用户订购的api总数 last-->
  <select id="getSelfApiCount"  parameterType="java.util.HashMap" resultType="int">
    SELECT count(distinct od.resource_id) FROM order_detail as od LEFT JOIN order_info as oi ON  od.order_id = oi.id where 1=1
    <if test="userId != null">
      AND od.order_user_id=#{userId}
    </if>
    <if test="resourceType != null">
      AND od.resource_type=#{resourceType}
    </if>
    <if test="payStatus != null">
      AND oi.order_status=#{payStatus}
    </if>
  </select>

  <!-- 获取用户订购的api 套餐总数 last-->
  <select id="getSelfApiChargeCount"  parameterType="java.util.HashMap" resultType="int">
    SELECT count(1) FROM order_detail as od LEFT JOIN order_info as oi ON  od.order_id = oi.id where 1=1
    <if test="userId != null">
      AND od.order_user_id=#{userId}
    </if>
    <if test="sourcdId != null">
      AND resource_id=#{sourceId}
    </if>
    <if test="packageId != null">
      AND charge_rule_id=#{packageId}
    </if>
    <if test="resourceType != null">
      AND od.resource_type=#{resourceType}
    </if>
    <if test="payStatus != null">
      AND oi.order_status=#{payStatus}
    </if>
  </select>


  <!--获取用户的数据的 总数-->
  <select id="getOrderDetailDataCount"  parameterType="java.util.HashMap" resultType="int">
    SELECT count(* ) FROM order_detail as od LEFT JOIN order_info as oi ON od.order_id = oi.id where 1=1
    <if test="userId != null">
      AND order_user_id=#{userId}
    </if>
    <if test="resourceType != null">
      AND resource_type=#{resourceType}
    </if>
    <if test="payStatus != null">
      AND oi.order_status=#{payStatus}
    </if>
  </select>

  <!--获取用户的购买的数据-->
  <!--<select id="getOrderDetailData"  parameterType="java.util.HashMap" resultMap="BaseResultMap">-->
    <!--SELECT *  FROM order_detail where 1=1-->
    <!--<if test="userId != null">-->
      <!--AND order_user_id=#{userId}-->
    <!--</if>-->
    <!--<if test="resourceType != null">-->
      <!--AND resource_type=#{resourceType}-->
    <!--</if>-->
     <!--limit #{startIndex},#{endIndex}-->
  <!--</select>-->

  <select id="getOrderDetailData"  parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT * FROM order_detail as od LEFT JOIN order_info as oi ON od.order_id = oi.id where 1=1
    <if test="userId != null">
      AND order_user_id=#{userId}
    </if>
    <if test="resourceType != null">
      AND resource_type=#{resourceType}
    </if>
    <if test="payStatus != null">
      AND oi.order_status=#{payStatus}
    </if>
    ORDER BY  od.created_time DESC limit #{startIndex},#{endIndex}
  </select>



    <select id="getOrderDetailBySourceId"  parameterType="int" resultMap="BaseResultMap">
    SELECT * FROM order_detail where 1=1
    <if test="resourceId != null">
      AND resource_id=#{resourceId}
    </if>
  </select>
  <!--获取购买成功后数据的资源数-->


  <!--获取购买成功后资源数 包括对数据 api的统计-->
  <select id="getCountSource"  resultMap="SourceUserIdCont">
  select resource_type,resource_id,count(*) as apply_num,count(distinct order_user_id) as user_num from order_detail where 1=1 group by resource_id;
--      SELECT resource_type,resource_id ,count(*) as source_num from
--    (select resource_type, resource_id,order_user_id from order_detail group by resource_id,order_user_id) t group by resource_id;
  </select>

  <!--获取购买成功后资源数 包括对数据 api的统计-->
  <select id="getCountStatisticsSource"  resultMap="SourceStatisticsCont">
    select charge_rule_type as resource_type,resource_id,count(*) as apply_num,count(distinct order_user_id) as user_num,area from order_detail where 1=1 group by resource_id;
    --      SELECT resource_type,resource_id ,count(*) as source_num from
    --    (select resource_type, resource_id,order_user_id from order_detail group by resource_id,order_user_id) t group by resource_id;
  </select>



  <!--根据用户的id 以及订单号 获取订单详情-->
  <select id="getByUserIdAndOrderNum" parameterType="map" resultMap="BaseResultMap">
    SELECT * FROM order_detail where 1=1
    <if test="userId != null">
      AND order_user_id=#{userId}
    </if>
    <if test="orderNum != null">
      AND order_num=#{orderNum}
    </if> ORDER BY  created_time DESC
  </select>


<!--获取统计数-->
  <select id="getSourceStatistics" parameterType="HashMap" resultType="HashMap">
    select resource_id as resourceId,count(distinct order_user_id)as applyUserCount,count(resource_id)as applyCount
    from order_detail WHERE 1=1
    <if test="resourceType!=null and resourceType!=''">
      AND resource_type=#{resourceType}
    </if>
    <if test="dataIds!=null and dataIds!=''">
      AND resource_id IN
      <foreach collection="dataIds" item="dataId" index="index" open="(" separator="," close=")">
        #{dataId}
      </foreach>
    </if> GROUP BY resource_id;
  </select>



  <select id="getOrderDetailByTime"  parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT * FROM order_detail where 1=1
    <if test="startTime!= null">
      AND created_time &gt;=#{startTime}
    </if>
    <if test="endTime!= null">
      AND created_time &lt;=#{endTime}
    </if>
    <if test="resourceType!=null and resourceType!=''">
      AND resource_type=#{resourceType}
    </if>
  </select>


  <!--获取用户的订单信息-->
  <select id="getOrderDetailByUserIdsT" parameterType="String" resultType="java.util.Map">
    select resource_name,resource_type,order_user_name,created_time as pay_time,item_cash,item_number,order_num,item_cash_total,
    order_user_id as userId
    from order_detail WHERE order_user_id =#{userId} ORDER BY created_time DESC;
  </select>


  <!--获取用户的订单信息-->
  <select id="getOrderDetailByUserIds" parameterType="java.util.Map" resultType="java.util.Map">
    select resource_name,resource_type,order_user_name,created_time as pay_time,item_cash,item_number,order_num,item_cash_total,
    order_user_id as userId
    from order_detail WHERE  order_user_id IN
    <foreach collection="userIds" item="userId" index="index" open="(" separator="," close=")">
      #{userId}
    </foreach>
    <if test="startTime!= null">
      AND created_time &gt;=#{startTime}
    </if>
    <if test="endTime!= null">
      AND created_time &lt;=#{endTime}
    </if>
    ORDER BY created_time DESC;
  </select>
</mapper>